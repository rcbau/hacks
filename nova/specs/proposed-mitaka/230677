From 4c9f81544a79432ce922428f122cb83a034c5f2e Mon Sep 17 00:00:00 2001
From: Deepti Ramakrishna <deepti.ramakrishna@intel.com>
Date: Fri, 2 Oct 2015 15:14:13 -0700
Subject: [PATCH] Data Security Enforcements In Nova

Enterprises need to be compliant with data security laws and regulations that
require sensitive data to be encrypted at rest (storage) as well in motion
(over the wire). Nova has features such as transparent data encryption that
can be utilized as part of a data security compliance plan. We propose
implementing checks inside Nova that will ensure that such features are
enabled. These checks will be triggered based on the presence of specific
metadata defined on an image. Such declaration based enforcements can provide
additional confidence to the operators tasked with setting up a secure cloud
and thereby provide impetus to the enterprise adoption of OpenStack.

Change-Id: I0618bf381d1868af7facf991d22e2e8113794193
---
 .../mitaka/approved/data-security-enforcements.rst | 241 +++++++++++++++++++++
 1 file changed, 241 insertions(+)
 create mode 100644 specs/mitaka/approved/data-security-enforcements.rst

diff --git a/specs/mitaka/approved/data-security-enforcements.rst b/specs/mitaka/approved/data-security-enforcements.rst
new file mode 100644
index 0000000..28fe357
--- /dev/null
+++ b/specs/mitaka/approved/data-security-enforcements.rst
@@ -0,0 +1,241 @@
+..
+ This work is licensed under a Creative Commons Attribution 3.0 Unported
+ License.
+
+ http://creativecommons.org/licenses/by/3.0/legalcode
+
+==================================
+Data Security Enforcements In Nova
+==================================
+
+https://blueprints.launchpad.net/nova/+spec/data-security-enforcements
+
+Enterprises need to be compliant with data security laws and regulations that
+require sensitive data to be encrypted at rest (storage) as well in motion
+(over the wire). Nova has features such as transparent data encryption that
+can be utilized as part of a data security compliance plan. We propose
+implementing checks inside Nova that will ensure that such features are
+enabled. These checks will be triggered based on the presence of specific
+metadata defined on an image. Such declaration based enforcements can provide
+additional confidence to the operators tasked with setting up a secure cloud
+and thereby provide impetus to the enterprise adoption of OpenStack.
+
+
+Problem description
+===================
+
+Most enterprises need to comply with various laws and regulations concerning
+sensitive data such as credit cards, personally identifiable information, etc.
+Such laws require that such data be rendered unreadable while at rest
+(storage) as well as in motion (over the wire). While Nova has features such as
+transparent data encryption, ephemeral storage encryption, etc., the burden of
+ensuring that these features are enabled falls on the operator. In other words,
+the operator needs to manually check that nova.conf has ephemeral encryption
+enabled, that only encrypted Cinder volumes are attached to a VM instance etc.
+We propose a declarative approach where the operator declares, via image
+metadata, that any data generated by a VM instance launched from the image
+needs to be secured (at rest as well as in motion). We can only do enforcement
+rather auto-enabling of these features since many of them require offline setup
+(e.g creating an encrypted cinder volume) that itself involves user input
+(e.g. encryption key size).
+
+The scope of enforcement is not comprehensive. That is, it does not guarantee
+that every possible way an application can become nonconforming will be
+checked. For example, an application can make an unsecured network connection
+and transmit data and there is nothing we can do. But the scope will be broad
+enough that it should satisfy most common applications.
+
+Use Cases
+----------
+
+Main use cases for this work is to accelerate the adoption of OpenStack by
+enterprises by providing an easy way for them to continue to remain compliant
+with data security laws and regulations during and after the migration.
+
+This is one of the use-cases that came out of the OpenStack product working
+group.
+See use case details here:
+https://docs.google.com/document/d/13xKneIuUqyTiwZN12ZVvejFsohwme3L4RFaAUKLEnKk/edit
+
+Project Priority
+-----------------
+
+While data security is of critical importance, this proposal only enforces
+existing functionality and does not introduce any new features. So, it is
+medium priority.
+
+A demo of proof-of-concept of this spec
+https://www.youtube.com/watch?v=DvnoCTjLuWY was informally discussed at
+Operators mid-cycle summit in Aug 2015 where it generated some interest among
+operators.
+
+Please see meeting minutes from etherpad:
+https://etherpad.openstack.org/p/PAO-ops-product-wg
+
+Proposed change
+===============
+
+We assume that the enterprise has an application that handles sensitive data
+that it encrypts and writes to a volume. Such an application can be the
+database software (such as MySql) or some other application that writes the
+encrypted data directly to a local disk. The operator tags the image with
+"data-security-required" metadata. The specifics of the metadata can be read
+in this Glance blueprint -
+https://blueprints.launchpad.net/glance/+spec/data-security-metadata
+but essentially two pieces of information can be conveyed by such metadata.
+
+1) Desire for data security.
+2) The encryption algorithm and strength of keys to be used for encrypting
+   data.
+
+If a user comes with an image tagged with such metadata, we enforce the
+following:
+
+1) A VM instance running the image should always use encrypted ephemeral
+   storage. If ephemeral encryption is disabled (in nova.conf), Nova
+   should fail to create an instance.
+2) A VM instance running the image should connect only to an encrypted
+   cinder volume. If user tries to connect to an unencrypted volume, then
+   such a request must be declined.
+3) The encryption algorithm and keys used by ephemeral encryption as well
+   as volume encryption are at least as strong as what is specified in the
+   image metadata.
+
+Note that any changes in the image metadata after a VM is launched will not
+affect the running VM instance.
+
+It is easy to see that above enforcements make the data unreadable at rest (in
+Cinder volume or ephemeral storage) or on the wire (from VM to Cinder volume
+via iSCSI).
+
+We make no claims to the comprehensiveness of the checks as the nature of the
+application informs the type and the list of vulnerabilities. In particular,
+we do not do any checks on outbound network calls. Eventually, it is the
+operator's responsibility to ensure that all vulnerabilities are taken care.
+That said, the checks mentioned in this section cover the most important and
+mandatory aspects of data security enforcement and as such may not just be
+necessary but also sufficient for quite a few applications.
+
+Alternatives
+------------
+
+Other than complete manual enforcement mentioned above, there is no other
+alternative that we know of.
+
+Data model impact
+-----------------
+
+None
+
+REST API impact
+---------------
+
+None
+
+Security impact
+---------------
+
+Does not define any new security functionality; enforces use of existing ones.
+
+Notifications impact
+--------------------
+
+None
+
+Other end user impact
+---------------------
+
+None
+
+Performance Impact
+------------------
+
+The checks themselves are simple and hence negligible performance impact.
+
+Other deployer impact
+---------------------
+
+It is possible that end users can fail to launch VMs from an image that is
+tagged with data security metadata if the cloud provider is unable to support
+the requirements. For example, the end user will not be able to launch a VM
+from such an image if the cloud provider has not enabled ephemeral encryption
+in the compute nodes.
+
+Developer impact
+----------------
+
+The developer can evaluate if any new/existing feature in Nova can integrate
+with the data security metadata thus enabling new enforcements.
+
+
+Implementation
+==============
+
+Assignee(s)
+-----------
+
+Primary assignee:
+  dramakri
+
+Work Items
+----------
+
+1) At VM create time, check if image metadata set and if so ensure that
+   ephemeral storage encryption is set. If not set, fail the request. If
+   set, check that encryption strength satisfies requirements set in image
+   metadata. In particular, ensure that the encryption algorithm and key
+   size are at least as strong as what is requested.
+2) When a Cinder volume is being attached to a VM instance created from the
+   image above, ensure that the volume is of an encrypted type and that the
+   encryption satisfied the requirements set in image metadata.
+
+
+Dependencies
+============
+
+Glance image metadata blueprint for data security:
+https://blueprints.launchpad.net/glance/+spec/data-security-metadata
+
+
+Testing
+=======
+
+Testing requires setting data security related image metadata and verifying
+that Nova performs all the checks. These tests can all be performed using
+DevStack.
+
+
+Documentation Impact
+====================
+
+We need to document the enforcements performed by Nova based on the
+presence of data security-related metadata. We also need to emphasize that
+this is an aid and not a turnkey solution for data security compliance.
+
+References
+==========
+
+1) Link to operators mid-cycle summit meeting minutes:
+   https://etherpad.openstack.org/p/PAO-ops-product-wg
+2) Link to the demo of Proof-of-Concept of this feature:
+   https://www.youtube.com/watch?v=DvnoCTjLuWY
+3) Transparent nova encryption implementation link (already merged):
+   https://review.openstack.org/#/c/30976/
+4) Ephemeral storage encryption implementation link (already merged):
+   https://review.openstack.org/#/c/40467/
+
+History
+=======
+
+Optional section for Mitaka intended to be used each time the spec
+is updated to describe new design, API or any database schema
+updated. Useful to let reader understand what's happened along the
+time.
+
+.. list-table:: Revisions
+   :header-rows: 1
+
+   * - Release Name
+     - Description
+   * - Mitaka
+     - Introduced
-- 
2.1.0

