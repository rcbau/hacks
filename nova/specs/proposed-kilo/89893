From df926d9abc7d6e2dedac4ec2c4ac241aa8b14970 Mon Sep 17 00:00:00 2001
From: Sylvain Bauza <sbauza@redhat.com>
Date: Wed, 23 Apr 2014 18:26:55 +0200
Subject: [PATCH] Propose Isolate Scheduler DB for Aggregates

Defines a clear way on how to update HostState thru a new RPCAPI endpoint.

Implements: blueprint isolate-scheduler-db

Change-Id: I489ab606341ed406024fff0c7e302fc158d20be2
---
 .../approved/isolate-scheduler-db-aggregates.rst   | 216 +++++++++++++++++++++
 1 file changed, 216 insertions(+)
 create mode 100644 specs/kilo/approved/isolate-scheduler-db-aggregates.rst

diff --git a/specs/kilo/approved/isolate-scheduler-db-aggregates.rst b/specs/kilo/approved/isolate-scheduler-db-aggregates.rst
new file mode 100644
index 0000000..7b70d59
--- /dev/null
+++ b/specs/kilo/approved/isolate-scheduler-db-aggregates.rst
@@ -0,0 +1,216 @@
+..
+ This work is licensed under a Creative Commons Attribution 3.0 Unported
+ License.
+
+ http://creativecommons.org/licenses/by/3.0/legalcode
+
+=========================================
+Isolate Scheduler Database for Aggregates
+=========================================
+
+https://blueprints.launchpad.net/nova/+spec/isolate-scheduler-db
+
+We want to split out nova-scheduler into gantt. To do this, this blueprint is
+the second stage after scheduler-lib split. These two blueprints are
+independent however.
+
+In this blueprint, we need to isolate all accesses to the database that
+Scheduler is doing and refactor code (manager, filters,
+weighters) so that scheduler is only internally accessing scheduler-related
+tables or resources.
+
+Note : this spec is only targeting changes to the Aggregates-related filters.
+
+
+Problem description
+===================
+
+In order to make decisions implying aggregates context, the scheduler needs to
+directly access values from DB or conductor while it should not, considering
+that Aggregates are Nova objects and are no stored on the scheduler tables.
+
+Below is the summary of all filters impacted by that proposal
+
+  * AggregateImagePropertiesIsolation,
+  * AggregateInstanceExtraSpecsFilter,
+  * AggregateMultiTenancyIsolation,
+  * AvailabilityZoneFilter,
+  * AggregateCoreFilter (calls n.objects.aggregate.AggregateList.get_by_host)
+  * AggregateRamFilter (calls n.objects.aggregate.AggregateList.get_by_host)
+  * AggregateTypeAffinityFilter (calls
+    n.objects.aggregate.AggregateList.get_by_host)
+
+
+Use Cases
+----------
+
+N/A, this is a refactoring effort.
+
+Project Priority
+-----------------
+
+This blueprint is part of the 'scheduler' refactoring effort identified as the
+3rd priority for Kilo (see footnote [1]).
+
+
+Proposed change
+===============
+
+The strategy will consist in updating the scheduler each time a change comes
+to an Aggregate (adding or removing a host or changing metadata)
+
+For that, we propose to add a new method to the current Scheduler client
+which could be having the following structure ::
+
+    update_aggregate(context, AggregateResource)
+
+where AggregateResource would be a clear defined object
+(see bp/resource-objects) including the following fields:
+
+  - metadata
+  - list of hosts belonging to it
+
+That method would be called at the aggregates helper module level, in each
+method responsible for actually updating the Aggregate object.
+
+
+The implementation proposal for that method would consist in updating HostState
+using the corresponding Resource.usage(). That will require to update the
+Scheduler RPC API to add update_aggregate() so that the Manager can directly
+access HostState.
+
+Once all of that would be done, filters would just have to look into HostState
+to access what they need.
+
+In order to provide compatibility in between distinct releases of compute nodes
+and scheduler, the idea is, for each filter, to check HostState if the field
+is there, and if not failback to calling the corresponding Aggregate object.
+That also allows to manage the case when the Scheduler service is restarted, as
+HostState is not persisted yet.
+
+For information only, we plan to move the Aggregate objects to the Scheduler DB
+in the next Lxxx cycle so the compatibility layer could be removed.
+
+
+Alternatives
+------------
+
+Instead of passing data to the scheduler either thru RT or request property, we
+could let the scheduler place a call to conductor for having these values. That
+said, the problem here is that it increases response time (external call
+instead of direct DB access) and also creates an external dependency with Nova
+objects that would require to be turned into python-novaclient call once Gantt
+forklifted.
+
+Data model impact
+-----------------
+
+None. There is no extra information to persist, as we will provide extra
+required data for filters either in request_spec or filter_properties, or
+direcly update HostState.
+
+
+REST API impact
+---------------
+
+None
+
+Security impact
+---------------
+
+None
+
+Notifications impact
+--------------------
+
+None
+
+
+Other end user impact
+---------------------
+
+None
+
+Performance Impact
+------------------
+
+Possibly some little increases in performance as the scheduler won't no longer
+access other Nova objects thru conductor but rather will look at
+filter_properties or request_spec that are passed thru RPC payload.
+
+
+Other deployer impact
+---------------------
+
+None
+
+Developer impact
+----------------
+
+Ideally:
+
+* Filters should no longer place calls to other bits of code except Scheduler.
+  This will be done by modifying Scheduler component to proxy conductor calls
+  to a Singleton which will refuse anything but scheduler-related objects.
+  See footnote [2] as example. As said above, we will still provide a failback
+  mode for Kilo release in order to have compatibility with N-1 release.
+
+
+
+Implementation
+==============
+
+Assignee(s)
+-----------
+
+Primary assignee:
+  sylvain-bauza
+
+Other contributors:
+  None
+
+
+Work Items
+----------
+
+* Write AggregateResource objects
+
+* Add a RPC API endpoint for update_aggregate()
+
+* Implement update_aggregate() on the Scheduler Manager so that it updates
+  HostState
+
+* Modify filters to look at HostState (and failback to Nova object)
+
+* Modify scheduler entrypoint to block conductor accesses to Aggregates
+  (once Lxxx release development will be open)
+
+
+Dependencies
+============
+
+* https://blueprints.launchpad.net/nova/+spec/resource-objects
+
+
+Testing
+=======
+
+Covered by existing tempest tests and CIs.
+
+
+Documentation Impact
+====================
+
+None
+
+
+References
+==========
+
+* https://etherpad.openstack.org/p/icehouse-external-scheduler
+
+* http://eavesdrop.openstack.org/meetings/gantt/2014/gantt.2014-03-18-15.00.html
+
+[1] https://etherpad.openstack.org/p/kilo-nova-priorities
+
+[2] http://git.openstack.org/cgit/openstack/nova/commit/?id=e5cbbcfc6a5fa31565d21e6c0ea260faca3b253d
-- 
1.9.1

