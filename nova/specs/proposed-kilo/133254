From f59d8e4a66a779ca2a96b1293bcdccee961d85af Mon Sep 17 00:00:00 2001
From: Angelo Matarazzo <angelo.matarazzo@dektech.com.au>
Date: Fri, 7 Nov 2014 15:41:24 +0100
Subject: [PATCH] Spec boot order for instance

This specification proposes a way to define a boot order for a
instance across devices, whether disks or network interfaces.
Spec updated according to some comments

APIImpact

Implements: blueprint boot-order-for-instance

Change-Id: I6abdb2b50b38b241db30b3ff655b84579ec5af46
---
 specs/kilo/approved/boot-order-for-instance.rst | 457 ++++++++++++++++++++++++
 1 file changed, 457 insertions(+)
 create mode 100644 specs/kilo/approved/boot-order-for-instance.rst

diff --git a/specs/kilo/approved/boot-order-for-instance.rst b/specs/kilo/approved/boot-order-for-instance.rst
new file mode 100644
index 0000000..1245326
--- /dev/null
+++ b/specs/kilo/approved/boot-order-for-instance.rst
@@ -0,0 +1,457 @@
+..
+ This work is licensed under a Creative Commons Attribution 3.0 Unported
+ License.
+
+ http://creativecommons.org/licenses/by/3.0/legalcode
+
+=======================
+boot order for instance
+=======================
+
+
+
+https://blueprints.launchpad.net/nova/+spec/boot-order-for-instance
+
+This specification proposes a way to define a boot order for an
+instance across devices, whether disks or network interfaces.
+
+
+Problem description
+===================
+
+The goal of this specification is to give the end users the possibility to
+select a specific boot device. For disks/cdrom/floppy this means a new way to
+handle the boot options in libvirt (see Proposed change section for more
+details), while enabling network interfaces as a possible booting source is a
+new feature that will be introduced in OpenStack.
+In order to add this feature, this specification proposes to modify the current
+way used by Nova to define the boot order, as suggested in [1]_.
+The proposed solution has the advantage to be able to specify the boot order
+not only for type of device (disk,floppy,cdrom,network) but for specific device
+(disk1,disk2,network1,network2).
+
+
+Use Cases
+----------
+
+The proposed feature addresses the case of virtualization of a legacy
+bare metal system.
+
+In these systems there are machines that retrieve their boot image over the
+network from a PXE server. This is used in case the machine does not have its
+own disk or the boot image needs to be managed remotely for some reason.
+In order to port this scenario into a cloud environment, the PXE server can be
+virtualized with existing OpenStack functionality, but the possibility to
+choose a network as boot source for an instance is not yet provided by
+OpenStack.
+
+In order to explain better a particular use case a simple diagram follows:
+
+::
+
+ +----------+       +----------+   |     +---------------+
+ | Client/  |       | Pxe      |   |     | configuration |     /----
+ | booting  |-------| server/  |---|-----| server        |------- legacy system
+ | VM       |       | pxe VM   |   |     |               |     \----
+ +----------+       +----------+   |     +---------------+
+                                proprietary
+                                interface
+
+In the previous scheme the configuration server is connected with the pxe
+server using proprietary interface and it is composed by several modules and
+acts according to external events.
+
+In this scenario the decision of which image should be passed to the booting
+machine by the pxe server, is taken by the configuration server.
+The interactions between Pxe server and the rest of the system is not limited
+to this and the way they work cannot be changed when migrating to OpenStack.
+
+It is too complex to modify the internal logic of the legacy system cause it
+impacts lots of modules.
+Therefore, in order to minimize the impacts during migration to OpenStack,
+it would be preferred if network booting via boot order selection was natively
+supported.
+
+A further use case deals with a user that wants to select the boot disk out of
+several disks which are connected to the vm/instance.
+The current nova implementation allows that multiple devices of the same type
+are sorted according to their targets while preserving the order of buses.
+It can be tricky to configure in the desired way and the proposed modification
+will provide the user the full control over booting order.
+
+
+Project Priority
+-----------------
+
+None
+
+
+Proposed change
+===============
+
+Currently, Nova supports disk, cdrom and floppy as boot device type
+and the user can specify the boot order through the following command:
+
+$ nova boot ... --block-device bootindex=integer
+
+This command makes the libvirt nova driver add dev attributes in the BIOS
+section <OS> <OS/>  according to the bootindex parameter.
+
+::
+
+ <os>
+ ...
+    <boot dev='hd'/>
+    <boot dev='cdrom'/>
+ ...
+ </os>
+
+This specification aims to provide the possibility to define a boot order
+across all assigned devices  according to official documentation of libvirt
+[2]_.
+It is possible to insert <boot order='xx' /> element in the "device" section of
+libvirt domain. In this way the instance can boot both from specific disk or
+from specific network interface extending the image/snapshot/volume
+requirement.
+
+Example:
+
+::
+
+ <devices>
+     ...
+     <disk type='file' device='disk'>
+         ...
+         <boot order='2'/>
+         ...
+     </disk>
+     ...
+     <interface type='network'>
+       <source dev='eth0'/>
+       <mac address='52:54:00:5d:c7:9e'/>
+       <boot order='1'/>
+     </interface>
+ </devices>
+
+For volumes it is possible to use the existent bootindex parameter and handle
+its value differently to generate Libvirt XML domain according to the new
+template.
+
+REST API must be modified in order to allow the user to choose the boot index
+for the network device.
+
+Nova module will recognize the bootindex over all the devices, it will set the
+appropriate boot order per device and it will use the Libvirt Driver to
+generate an appropriate Libvirt XML domain.
+
+Besides the current way used by nova to prioritize the boot devices must be
+changed because the proposed implementation and existing one are
+mutually exclusive as reported in official documentation of libvirt [2]_.
+
+A new option "--nic bootindex=integer" will be introduced in python-novaclient
+module to specify the compute instance which will boot according to the order
+sorted by bootindex option.
+
+Example
+$ nova boot ... --block-device bootindex=integer ... --nic bootindex=integer
+
+
+Alternatives
+------------
+
+There is no alternative to give an instance the possibility to boot from a
+specific attached device.
+In order to boot from network a different approach  is possible to specify
+the Libvirt XML attribute <boot dev='network'/> in OS section of domain, but
+the specific device cannot be chosen, causing DHCP requests to flow on networks
+where they don't belong to (if more network interfaces are attached to the
+instance) and possible delays in the boot of the instances.
+Another alternative is to load a PXE image (like [3]_)  in glance and boot from
+it. Also in this case it won't be possible to choose the specific network
+interface to use for boot with same drawbacks of the alternative previously
+described, moreover this is a workaround that can lead to unexpected behaviours
+(e.g. creation of not working snapshots).
+
+
+Data model impact
+-----------------
+
+None.
+
+
+REST API impact
+---------------
+
+Currently the v3 definition are in progress and should be enabled.
+The affected method is Create server: an optional boot_index parameter
+will be added in networks and port section.
+Method description, method type, normal http response code(s), expected error
+http response code(s), URL for the resource will not change.
+
+Method Type : POST
+
+URL : /v3/?{tenant_id}?/os_devices_boot
+
+Description : Create server
+
+Normal response codes : 202
+
+Error response codes : computeFault (400, 500, ?), UnprocessableEntity (422),
+serviceUnavailable (503), badRequest (400), unauthorized (401), forbidden (
+403), badMethod (405), overLimit (413), itemNotFound (404), badMediaType (415),
+NetworkNotFound (400), serverCapacityUnavailable (503)
+
+
+**Additional parameter passed via the url**
+
++---------------+-----------+------------+-----------------------------------+
+| **Parameter** | **Style** | **Type**   | **Description**                   |
++---------------+-----------+------------+-----------------------------------+
+| boot_index    | plain     | xsd:string | Specify the boot index            |
+| (Optional)    |           |            |                                   |
++---------------+-----------+------------+-----------------------------------+
+
+**JSON schema definition of the parameter**
+
+::
+
+ server_create = {
+     'type': 'object',
+     'properties': {
+         'server': {
+             'type': 'object',
+             'properties': {
+                 'name': parameter_types.name,
+                 'flavorRef': parameter_types.flavor_ref,
+                 'networks': {
+                     'type': 'array',
+                     'items': {
+                         'type': 'object',
+                         'properties': {
+                             'fixed_ip': {
+                                 'type': ['string', 'null'],
+                                 'oneOf': [
+                                     {'format': 'ipv4'},
+                                     {'format': 'ipv6'}
+                                 ]
+                             },
+                             'port': {
+                                 'type': ['string', 'null'],
+                                 'format': 'uuid',
+                             },
+                             'uuid': {'type': 'string'},
+                             **'boot_index':['integer', 'null'],**
+                        },
+                         'additionalProperties': False,
+                     }
+                 }
+             },
+             'required': ['name', 'flavorRef'],
+             # TODO(oomichi): After all extension schema patches are merged,
+             # this code should be enabled. If enabling before merger, API
+             # extension parameters would be considered as bad parameters.
+             # 'additionalProperties': False,
+
+         },
+     },
+     'required': ['server'],
+     # TODO(oomichi): Now v3 code will be used for v2.1 only and v2.1 needs
+     # to allow additionalProperties for some extensions.
+     # 'additionalProperties': False,
+ }
+
+
+**Example use case: JSON Request**
+
+::
+
+ {
+     "server": {
+         "name": "server-test-1",
+         "flavorRef": "2",
+         "max_count": 1,
+         "min_count": 1,
+         "networks": [
+             {
+                 "uuid": "d32019d3-bc6e-4319-9c1d-6722fc136a22"
+                 "boot_index" : "1"
+             },
+             {
+                 "port" : "d32019d3-bc6e-4319-9c1d-6722fc136a23"
+                 "boot_index" : "2"
+             },
+         ],
+     }
+ }
+
+**Example use case: JSON Response**
+
+::
+
+   {
+     "server": {
+         "security_groups": [
+             {
+                 "name": "default"
+             }
+         ],
+         "OS-DCF:diskConfig": "MANUAL",
+         "id": "c6d04159-9bfc-4ab8-823d-0d5ca2abe152",
+         "links": [
+             {
+                 "href": "http://166.78.46.130:8774/v3/
+                 4fd44f30292945e481c7b8a0c8908869/
+                 servers/c6d04159-9bfc-4ab8-823d-0d5ca2abe152",
+                 "rel": "self"
+             },
+             {
+                 "href": "http://166.78.46.130:8774/
+                 4fd44f30292945e481c7b8a0c8908869/servers/
+                 c6d04159-9bfc-4ab8-823d-0d5ca2abe152",
+                 "rel": "bookmark"
+             }
+         ],
+         "adminPass": "aabbccddeeff"
+     }
+ }
+
+
+Security impact
+---------------
+
+None.
+
+
+Notifications impact
+--------------------
+
+None.
+
+
+Other end user impact
+---------------------
+
+A new option --nic bootindex=integer will be introduced in python-novaclient
+module for nova boot command:
+$ nova boot ... --block-device bootindex=integer ... --nic bootindex=integer
+
+From a preliminary investigation it seems that snapshot creation leads to not
+working images in case of network boot. If this is confirmed, this issue
+should be handled disabling snapshots for pxe booted image and providing the
+user with a warning message.
+
+
+Performance Impact
+------------------
+None.
+
+
+Other deployer impact
+---------------------
+
+The PXE boot sequence starts with a DHCP request, so selecting a network
+interface as boot source requires the presence of a DHCP server on
+that network. The DHCP service can be provided either by Neutron or by an
+instance in the same tenant.
+In the case Neutron is used as DHCP server, to enable network boot for an
+instance it is enough to define a Security Group that allows TFTP traffic. It
+is possible to use the --extra-dhcp-opt [4]_ to indicate the TFTP IP address
+and the boot file path when the port attached to the pxe network is created.
+In the case an instance in the tenant is used as DHCP server, it is necessary
+to disable Neutron DHCP for that network (to avoid race condition) and use a
+Firewall Driver that allows DHCP offers sent from instances
+(OVSHybridIptablesFirewallDriver disables them).
+
+There are no further requirements for other instances in the same tenant (that
+can still use different boot sources like volumes or images).
+
+There are no further requirements for additional network interfaces attached
+to the instance booting from network, so Neutron DHCP can be either enabled or
+disabled for those (allowing the use of ConfigDrive network specification).
+
+In Ubuntu OS libvirt ignores the boot_order parameter set in network interface,
+trying to boot also from  network interfaces not set as boot device.
+There is a bug on ipxe client reported only for Ubuntu OS.
+In Red Hat Enterprise/CentOS 7 libvirt the bug has been solved.
+
+
+Developer impact
+----------------
+
+The required implementation involves libvirt library.
+Booting via the BIOS is available for hypervisors supporting full
+virtualization and not supporting this fine grained boot ordering. The others
+will ignore anything except the device with bootindex=1.
+The feature won't work with hypervisors not managed via libvirt.
+
+It is still not sure if XenServer can support per device boot order, in any
+case the implementation of the feature described in this specification will
+not impact the current behaviour for XenServer instances.
+
+Implementation
+==============
+
+Assignee(s)
+-----------
+
+Primary assignee:
+  pasquale-porreca
+
+Other contributors:
+  matarazzoangelo
+  trung-t-trinh
+  marco-romano-6
+  daniele-casini
+
+
+Work Items
+-----------
+
+-Disable current function to generate the boot order in <os> section of
+Libvirt domain
+
+-Modify the handling of existent bootindex parameters for volumes to generate
+<boot order> element in <disk> section of Libvirt domain
+
+-Modify  nova API to allow to define bootindex for network interface
+
+-Manage bootindex parameter to pass the boot order for network interfaces
+to libvirt driver
+
+-Modify python-novaclient to allow the user to define bootindex also for
+network interface
+
+
+Dependencies
+============
+
+None.
+
+Testing
+=======
+
+Tempest tests will be necessary for this functionality.
+
+
+Documentation Impact
+====================
+
+It will be necessary to add a specification in the Compute API document for the
+new parameter and to modify the existing documentation on boot_index of block
+device.
+
+
+User guide is affected by these changes:
+--The Section nova commands should be changed
+
+
+References
+==========
+
+.. [1] http://lists.openstack.org/pipermail/openstack-dev/2014-October/047633.html
+.. [2] http://libvirt.org/formatdomain.html#elementsOS
+.. [3] http://boot.ipxe.org/ipxe.iso
+.. [4] http://docs.openstack.org/api/openstack-network/2.0/content/extra-dhcp-opt-ext-create.html
+.. [5] https://blueprints.launchpad.net/nova/+spec/pxe-boot-instance
+.. [6] https://blueprints.launchpad.net/nova/+spec/libvirt-empty-vm-boot-pxe
+
-- 
1.9.1

