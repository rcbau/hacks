From 8452d65138f826f14a266f6b55688144f33dfef0 Mon Sep 17 00:00:00 2001
From: Andrew Laski <andrew.laski@rackspace.com>
Date: Fri, 21 Nov 2014 16:06:26 -0500
Subject: [PATCH] Cells instance migration

Spec for migrating data into the instance_mapping table used for
tracking which instance is in which cell.

bp cells-instance-migration

Change-Id: Idc104f70820e2796aa0d093118e7e7fe15318986
---
 specs/kilo/approved/cells-instance-migration.rst | 167 +++++++++++++++++++++++
 1 file changed, 167 insertions(+)
 create mode 100644 specs/kilo/approved/cells-instance-migration.rst

diff --git a/specs/kilo/approved/cells-instance-migration.rst b/specs/kilo/approved/cells-instance-migration.rst
new file mode 100644
index 0000000..d7c06ce
--- /dev/null
+++ b/specs/kilo/approved/cells-instance-migration.rst
@@ -0,0 +1,167 @@
+..
+ This work is licensed under a Creative Commons Attribution 3.0 Unported
+ License.
+
+ http://creativecommons.org/licenses/by/3.0/legalcode
+
+========================
+Cells instance migration
+========================
+
+https://blueprints.launchpad.net/nova/+spec/cells-instance-migration
+
+Now that there's a table to map instances to cells it needs to be populated
+with data on instances that exist prior to its creation and usage.
+
+
+Problem description
+===================
+
+When Nova is partitioned into cells the compute api needs to know which cell to
+communicate with for a particular instance.  Instances that existed before this
+mapping was maintained need to have their location added to the table.
+
+Use Cases
+----------
+
+* Operators want to partition their deployments into cells for scaling, failure
+  domain, and buildout reasons.  When partitioned, we need a lookup table to
+  know which partition an instance is in.  That lookup table needs to be
+  populated with information on instances that exist prior to its creation.
+
+Project Priority
+-----------------
+
+Cells v2 has been made a project priority for Kilo.
+
+
+Proposed change
+===============
+
+The 'instance_mapping' table will be populated with data on which cell an
+instance lives in.
+
+This can be done via a nova-manage command that will be added to look up
+instances in a database and add instance_mapping data for them.  Additionally
+this table can be updated on an instance.save() if the mapping can be
+determined.
+
+There are two cases to consider, starting from a non-cell deployment or
+starting with cellsv1:
+
+If starting from a non-cells deployment:
+
+* Add a new v2 cell configured to use the existing nova database and message
+  queue.
+
+* Instances will be added to the instance_mapping table on instance_obj.save()
+  calls.
+
+* All unpopulated instances can be added to the instance_mapping table with a
+  nova-manage command.
+
+If starting from a cells v1 deployment the procedure is the same but is handled
+on a cell by cell basis.  So each cell will be migrated as a new v2 cell is
+added and configured to use its database and message queue.  The nova-manage
+command will be written to operate on a single cell for each run.
+
+
+Alternatives
+------------
+
+The alternatives to cells v1/v2 have been discussed prior to this spec.  In the
+cells v2 effort there is no alternative for this mapping requirement.
+
+Data model impact
+-----------------
+
+None
+
+REST API impact
+---------------
+
+None
+
+Security impact
+---------------
+
+None
+
+Notifications impact
+--------------------
+
+None
+
+Other end user impact
+---------------------
+
+None
+
+Performance Impact
+------------------
+
+There may be a tiny performance penalty for updating the mapping on an
+instance.save().
+
+Other deployer impact
+---------------------
+
+Deployers will be provided with a new nova-manage command to trigger the
+creation of the mappings.  This should be run once for a deployment not
+currently using cellsv1, and once in each cell for a deployment currently using
+cellsv1.  This migration can be run at any time but should be run a final time
+before switching over to using cells v2.
+
+Developer impact
+----------------
+
+None
+
+Implementation
+==============
+
+Assignee(s)
+-----------
+
+Primary assignee:
+  alaski
+
+Other contributors:
+  None
+
+Work Items
+----------
+
+* Add nova-manage command to populate instance_mapping data for instances.  The
+  command should migrate one cell at a time, with a non-cell setup being
+  considered as one 'cell'.
+
+* Update instance.save() to populate the instance_mapping for an instance.
+
+
+Dependencies
+============
+
+https://blueprints.launchpad.net/nova/+spec/cells-instance-mapping
+
+
+Testing
+=======
+
+Since this is designed to be an internal re-architecting of Nova with no user
+visible changes the current suite of Tempest or functional tests should
+suffice.  At some point we will want to look at how to test multiple cells or
+potentially exposing the concept of a cell in the API and we will tackle
+testing requirements then.
+
+
+Documentation Impact
+====================
+
+Documentation on the new nova-manage command will need to be written.
+
+
+References
+==========
+
+``https://etherpad.openstack.org/p/kilo-nova-cells``
-- 
1.9.1

