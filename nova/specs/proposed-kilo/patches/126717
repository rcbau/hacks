From 76c26a0736e4e2fad8b94e197fe7c17db15955fb Mon Sep 17 00:00:00 2001
From: James Carey <jecarey@us.ibm.com>
Date: Tue, 7 Oct 2014 20:15:23 +0000
Subject: [PATCH] i18n lazy translation enablement

Enable lazy translation of messages to support the
Accept-Language header

Previously-approved: juno
Part of blueprint i18n-enablement

Change-Id: I17002abf79157d108b649b6e0a58c4b50ea9ebae
---
 specs/kilo/approved/i18n-enablement.rst | 188 ++++++++++++++++++++++++++++++++
 1 file changed, 188 insertions(+)
 create mode 100644 specs/kilo/approved/i18n-enablement.rst

diff --git a/specs/kilo/approved/i18n-enablement.rst b/specs/kilo/approved/i18n-enablement.rst
new file mode 100644
index 0000000..4c73d0e
--- /dev/null
+++ b/specs/kilo/approved/i18n-enablement.rst
@@ -0,0 +1,188 @@
+..
+ This work is licensed under a Creative Commons Attribution 3.0 Unported
+ License.
+
+ http://creativecommons.org/licenses/by/3.0/legalcode
+
+==========================================
+i18n Enablement for Nova
+==========================================
+
+https://blueprints.launchpad.net/nova/+spec/i18n-enablement
+
+This BluePrint/Spec proposes completing the enablement of i18n
+(internationalization) support for Nova by turning on the "lazy" translation
+support from the oslo.i18n library and updating Nova to adhere to the
+restrictions this adds to translatable strings.
+
+Internationalization implementation has been an on-going effort in OpenStack
+during recent releases.  The original blueprint for the Oslo support was
+included in Havana:
+https://blueprints.launchpad.net/oslo/+spec/delayed-message-translation
+
+Blueprints for this support in Nova have been approved and worked on in
+previous releases
+(https://blueprints.launchpad.net/nova/+spec/user-locale-api).
+During the Icehouse release, the foundational support for internationalization
+was merged into Nova.  Specifically the update of Oslo's gettextutils and the
+pre-existing work of explicitly importing '_' from gettextutils.
+
+During the Juno release, hacking checks were added to restrict how
+translatable messasges are used in Nova.  In particular, ensuring that
+translatable messges are not concatenated and that str() is not used on
+exceptions.
+
+To finalize this work in Kilo we need to enable the "lazy" translation
+provided in the oslo.i18n library and fix a few cases where str()
+is used on a translatable message.
+
+Enablement of lazy translation will allow end users to not only have logs
+produced in multiple languages, but adds the ability for REST API messages
+to also be returned in the language chosen by the user.  This functionality
+is important to support the use of OpenStack by the international community.
+
+
+Problem description
+===================
+
+Today all users of Nova must agree on a common locale to use to translate
+messages.  This is because messages are translated when they are created.
+There is a need for different Nova users to be able to use different
+translations simultaneously.
+
+Use Cases
+---------
+A user calls Nova via the REST API and specifies a value for Accept-Language
+in the Header that does not match the locale being used by the server.
+Instead of the messages being returned in the locale specified by the user,
+the messages are returned translated to the server's locale.  With this
+change the messages are translated prior to being returned by the server
+using the locale specified by the user, and if the translation is available
+the message is translated to that locale and returned.
+
+Project Priority
+----------------
+None
+
+Note that it needs to be enabled as early as possible to provide as much
+'burn in' time as possible.
+
+Proposed change
+===============
+
+This proposal is to use the oslo.i18n library support in order
+to enable "lazy" translation of messages.  This support, instead of
+immediately translating the messages, creates a Message object which
+holds the message and replacement text until the message can be translated
+using the locale associated with the Accept-Language Header from the
+user request.
+
+The code changes will be done as a single patch that adds an enable_lazy()
+helper method (that calls oslo.i18n's enable_lazy()) to nova/i18n.py and
+adds a call to this new helper in nova/cmd/__init__.py.  It will also
+include removal of a couple of cases where str() is being called on
+translatable messages.
+
+Alternatives
+------------
+
+None.
+
+Data model impact
+-----------------
+
+None.
+
+REST API impact
+---------------
+
+There is no additional changes to the REST API other than the fact
+that the change enables the user to specify the language they
+wish REST API responses to be returned in using the Accept-Language
+option.
+
+Security impact
+---------------
+
+None.
+
+Notifications impact
+--------------------
+
+None.
+
+Other end user impact
+---------------------
+
+None.
+
+Performance Impact
+------------------
+
+None.
+
+Other deployer impact
+---------------------
+
+Once merged this feature is immediately available to users.
+
+
+Developer impact
+----------------
+
+The developer impacts have already been in place for some time.  Developers
+have been using _() around messages that need translation.
+
+
+Implementation
+==============
+
+Assignee(s)
+-----------
+
+Primary assignee:
+  <jecarey@us.ibm.com>
+
+Work Items
+----------
+
+I am planning to implement this as one patch:
+
+* Add enable_lazy() helper to nova/i18n.py
+
+* Add call to helper in nova/cmd/__init__.py
+
+* Remove use of str() on translatable messages
+
+
+Dependencies
+============
+
+This depends on a new version of the oslo.vmware library which contains
+https://review.openstack.org/#/c/122193/
+which fixes lazy enablement support.
+
+
+Testing
+=======
+
+* There will be a tempest test added for Nova that will ensure that
+  lazy translation is working properly.
+
+* Hacking checks were added in Juno for:
+
+  * Concatenation of translatable messages
+
+  * Use of str() on exceptions
+
+
+Documentation Impact
+====================
+
+None.
+
+
+References
+==========
+
+* Accept-Language header: http://www.w3.org/International/questions/qa-accept-lang-locale
-- 
1.9.1

