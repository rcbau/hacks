From 129679c8e3e33e8282e3e1268b124fbde33c7c26 Mon Sep 17 00:00:00 2001
From: Roman Bogorodskiy <bogorodskiy@gmail.com>
Date: Sun, 12 Oct 2014 10:26:13 +0400
Subject: [PATCH] libvirt/linux_net refactor to work on FreeBSD

A proposal to implement freebsd_net and refactor libvirt.vif
module not use use only linux_net, but allow to choose
what network driver to use.

Change-Id: Icf6f1358abe21f1414507cd7a4dd4b05bce7afc5
---
 .../libvirt-linux-net-refactor-for-freebsd.rst     | 210 +++++++++++++++++++++
 1 file changed, 210 insertions(+)
 create mode 100644 specs/kilo/approved/libvirt-linux-net-refactor-for-freebsd.rst

diff --git a/specs/kilo/approved/libvirt-linux-net-refactor-for-freebsd.rst b/specs/kilo/approved/libvirt-linux-net-refactor-for-freebsd.rst
new file mode 100644
index 0000000..2275f1d
--- /dev/null
+++ b/specs/kilo/approved/libvirt-linux-net-refactor-for-freebsd.rst
@@ -0,0 +1,210 @@
+..
+ This work is licensed under a Creative Commons Attribution 3.0 Unported
+ License.
+
+ http://creativecommons.org/licenses/by/3.0/legalcode
+
+================================================================
+Refactor libvirt/linux_net integration to be portable to FreeBSD
+================================================================
+
+https://blueprints.launchpad.net/nova/+spec/libvirt-linux-net-refactor-for-freebsd
+
+The ultimate goal is to get Openstack working on FreeBSD host using
+the libvirt driver. Libvirt on FreeBSD supports Qemu and Bhyve.
+Independently of which driver will be used, it is still required
+to bring in the networking support for nova's libvirt driver.
+
+Problem description
+===================
+
+Currently nova.virt.libvirt.vif imports and uses nova.network.linux_net
+directly. It is not flexible enough if we target non-Linux systems as
+a host, so it should be configurable which network driver will be used.
+
+Use Cases
+---------
+
+The primary use case is OpenStack deployment on FreeBSD hosts with
+libvirt/qemu driver and potentially libvirt/bhyve driver.
+
+Project Priority
+----------------
+
+None
+
+Proposed change
+===============
+
+The proposed appoach would be:
+
+Currently the usage of linux_net in libvirt.vif looks this way:
+
+ * The following methods are used:
+   - create_tap_dev()
+   - create_ovs_vif_port()
+   - create_ivs_vif_port()
+   - device_exists()
+   - delete_net_dev()
+
+ * Usage of linux_net.LinuxBridgeInterfaceDriver methods:
+   - ensure_vlan_bridge()
+   - ensure_bridge()
+
+
+One could notice this interface is pretty complex and actually
+it is responsible for two things at the same time:
+
+ * Providing a Nova network API logic
+ * Providing helpers for OS-level network device management
+
+In order to make it more portable the proposal is to split out
+the OS-level helpers into its own entity and allow custom
+implementations for specific platform.
+
+For example, it would look this way::
+
+
+        """
+        nova.network.netdev module
+        """
+
+        def get_driver():
+            "Method returning platfrom specific implementation"
+            if our_os == "Linux":
+                return LinuxNetDevDriver
+            else
+                # not implemented
+
+        # network device helpers
+        def create_bridge(brname):
+            return get_driver().create_bridge(brname)
+
+        # other methods go here
+
+        """
+        nova.network.netdev.driver
+        """
+
+        class NetDevDriver(object):
+            """A class that defines an interface for
+            OS-level network device manipulation"""
+
+            def create_bridge(self, brname):
+                raise NotImplementedError
+
+            # other methods go here
+
+
+        """
+        nova.netowrk.netdev.linux
+        """
+
+        class LinuxNetDevDriver(NetDevDriver):
+            """A class that implements NetDevDriver
+            interface for Linux"""
+
+            def create_bridge(self, brname):
+                # Linux impl goes here
+
+            # other methods
+
+
+The plan is:
+
+ - Move out helper functions from linux_net to netdev
+ - Convert consumers of these helper functions from linux_net
+   to use the new netdev helpers
+ - Drop the old implementation of helpers from linux_net
+ - Add netdev.freebsd implementation
+
+Alternatives
+------------
+
+The more straight-forward approach would be to just rename
+linux_net.py to host_net.py and do if linux: elif bsd ...
+check all over the place but it'll be hard to read and hard to
+maintain code.
+
+Data model impact
+-----------------
+
+None
+
+REST API impact
+---------------
+
+None
+
+Security impact
+---------------
+
+None
+
+Notifications impact
+--------------------
+
+None
+
+Other end user impact
+---------------------
+
+None
+
+Performance Impact
+------------------
+
+None
+
+Other deployer impact
+---------------------
+
+Deployers will be able to deploy compute on FreeBSD hosts.
+
+Developer impact
+----------------
+
+None
+
+Implementation
+==============
+
+Assignee(s)
+-----------
+
+Primary assignee:
+  novel
+
+
+Work Items
+----------
+
+ - Make nova test suite pass on FreeBSD
+ - Refactor linux_net to the interface described above
+ - Implement subclasses with the FreeBSD support
+
+Dependencies
+============
+
+None
+
+Testing
+=======
+
+Once the feature is complete, it would be useful to add gate
+tests on FreeBSD.
+
+Documentation Impact
+====================
+
+None
+
+References
+==========
+
+Previous discussions of this change happened in the following change
+requests:
+
+ - https://review.openstack.org/#/c/85119/
+ - https://review.openstack.org/#/c/95328/
+
-- 
1.9.1

