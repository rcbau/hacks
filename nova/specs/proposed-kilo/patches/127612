From dd46ae0b384f3ac0e1c7cbbe7eae20e4abd5f5c2 Mon Sep 17 00:00:00 2001
From: Jay Pipes <jaypipes@gmail.com>
Date: Fri, 10 Oct 2014 14:13:24 -0400
Subject: [PATCH] Change select_destinations() to use request spec

Specification to change the `select_destinations()` scheduler RPC API
method to use a `nova.objects.request_spec.RequestSpec` object instead
of a nested dict.

Change-Id: I9f9a5d48b1203c619b2e9033a9b65934811c996f
Blueprint: sched-select-destinations-use-request-spec-object
---
 ...select-destinations-use-request-spec-object.rst | 190 +++++++++++++++++++++
 1 file changed, 190 insertions(+)
 create mode 100644 specs/kilo/sched-select-destinations-use-request-spec-object.rst

diff --git a/specs/kilo/sched-select-destinations-use-request-spec-object.rst b/specs/kilo/sched-select-destinations-use-request-spec-object.rst
new file mode 100644
index 0000000..49ff605
--- /dev/null
+++ b/specs/kilo/sched-select-destinations-use-request-spec-object.rst
@@ -0,0 +1,190 @@
+..
+ This work is licensed under a Creative Commons Attribution 3.0 Unported
+ License.
+
+ http://creativecommons.org/licenses/by/3.0/legalcode
+
+================================================================================
+Change select_destinations() scheduler RPC API method to pass RequestSpec object
+================================================================================
+
+Include the URL of your launchpad blueprint:
+
+https://blueprints.launchpad.net/nova/+spec/sched-select-destinations-use-request-spec-object
+
+Change the `select_destinations()` scheduler RPC API method to use a
+`nova.objects.request_spec.RequestSpec` object instead of a nested dict.
+
+Problem description
+===================
+
+The main interface into the scheduler, the `select_destinations()` method,
+accepts a `request_spec` parameter that is a nested dict. This nested dict is
+constructed in `nova.scheduler.utils.build_request_spec()`, which is called by
+nova-conductor before asking the scheduler to find compute nodes on which to
+put one or more requested virtual machine instances.
+
+Previous blueprints have introduced a `nova.objects.request_spec.RequestSpec`
+object that can model the entire request for multiple instance launches.
+However, the scheduler RPC API has not been changed to use this new object.
+Instead, nova-scheduler constructs the `RequestSpec` object 
+
+Use Cases
+----------
+
+Nova contributors wish to extend the functionality of the scheduler and intend
+to break the scheduler out into the Gantt project. In order to do this
+effectively, the internal interfaces around the resource tracker and the
+scheduler must be cleaned up to use structured objects.
+
+Project Priority
+-----------------
+
+Falls under the technical debt reduction category.
+
+Proposed change
+===============
+
+A new class called `RequestSpec` will be created that models a request to
+launch multiple virtual machine instances. The first version of the
+`RequestSpec` object will simply be an objectified version of the current
+dictionary parameter. The scheduler will construct this `RequestSpec` object
+from the `request_spec` dictionary itself.
+
+The existing
+`nova.scheduler.utils.build_request_spec` method will be removed in favor of a
+factory method on `nova.scheduler.request_spec.RequestSpec` that will construct
+a `RequestSpec` from the existing key/value pairs in the `request_spec`
+parameter supplied to `select_destinations`.
+
+Alternatives
+------------
+
+None.
+
+Data model impact
+-----------------
+
+None.
+
+REST API impact
+---------------
+
+None.
+
+Security impact
+---------------
+
+None.
+
+Notifications impact
+--------------------
+
+None.
+
+Other end user impact
+---------------------
+
+None.
+
+Performance Impact
+------------------
+
+None.
+
+Other deployer impact
+---------------------
+
+None.
+
+Developer impact
+----------------
+
+None, besides making the scheduler call interfaces gradually easier to read
+and understand.
+
+Implementation
+==============
+
+Assignee(s)
+-----------
+
+Primary assignee:
+  jaypipes
+
+Implementation
+==============
+
+We will increment the version of the scheduler RPC API and insert translation
+blocks in the `select_destinations` method to handle an older nova-conductor
+node sending the old-style dictionary `request_spec` parameter to a newer
+nova-scheduler node that expects a `RequestSpec` object.
+
+The nova-conductor manager code will then be updated to construct a
+`RequestSpec` object to pass to the `select_destinations()` scheduler RPC API
+instead of calling `nova.scheduler.utils.build_request_spec()`.  The
+`build_request_spec()` method will then be removed.
+
+The code added in the `request-spec-objects` blueprint that constructed a
+`RequestSpec` object in the `FilterScheduler._schedule()` method will then be
+removed, as it will no longer be needed since the `request_spec` parameter will
+already be an object.
+
+Assignee(s)
+-----------
+
+Primary assignee:
+  jaypipes
+
+Work Items
+----------
+
+- Increment the scheduler RPC API `select_destinations()` method to take a
+  `RequestSpec` object instead of a dictionary for the `request_spec`
+  parameter. In the same patch, modify the conductor manager to construct a
+  `RequestSpec` object and pass that to `select_destinations()` instead of
+  dict. Remove the code in filter_scheduler.FilterScheduler._schedule() that
+  constructs a `RequestSpec` object, since the object is now being passed to
+  `select_destinations()`
+
+- Remove the `nova.scheduler.utils.build_request_spec` function.
+
+Dependencies
+============
+
+This blueprint is dependent on the completion of the following blueprints:
+
+- `request-spec-object`
+
+Testing
+=======
+
+New unit tests for the request spec objects will be added. The existing unit
+tests of the scheduler will be overhauled in the patch set that converts the
+filters to use the new request_spec object model instead of its current
+free-form `filter_properties` dictionary of things.
+
+Documentation Impact
+====================
+
+Developer reference material that explains the new placement spec class
+will be delivered as a part of this blueprint.
+
+References
+==========
+
+This blueprint is part of an overall effort to clean up, version, and stabilize
+the interfaces between the nova-api, nova-scheduler, nova-conductor and
+nova-compute daemons that involve scheduling and resource decisions.
+
+Blueprints involved in this effort include:
+
+- `detach-service-from-computenode`
+- `resource-objects`
+- `request-spec-object`
+- `sched-select-destinations-use-request-spec-object` <-- this blueprint
+- `placement-spec-object`
+- `condition-objects`
+- `sched-placement-spec-use-resource-objects`
+- `sched-placement-spec-use-condition-objects`
+- `sched-get-placement-claims`
-- 
1.9.1

